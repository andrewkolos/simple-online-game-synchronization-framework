{"version":3,"file":"build.js","sources":["../src/timer.ts","../node_modules/rollup-plugin-node-builtins/src/es6/events.js","../src/main.ts","../src/network.ts","src/interpolation-reconciliation-demo.ts"],"sourcesContent":["export class Timer {\r\n\r\n  private time: number = 0;\r\n\r\n  private updateIntervalId?: NodeJS.Timer;\r\n  private tickHandler: TickHandler;\r\n\r\n  constructor(tickHandler: TickHandler) {\r\n    this.tickHandler = tickHandler;\r\n  }\r\n\r\n  public start(updateRateHz: number) {\r\n    this.stop();\r\n    this.updateIntervalId = setInterval(() => this.tick(),\r\n      1000 / updateRateHz)\r\n  }\r\n\r\n  public isRunning(): boolean {\r\n    return this.updateIntervalId != undefined;\r\n  }\r\n\r\n  public stop() {\r\n    if (this.updateIntervalId != undefined) {\r\n      clearInterval(this.updateIntervalId);\r\n      this.updateIntervalId = undefined;\r\n    }\r\n  }\r\n\r\n  private tick() {\r\n    this.tickHandler(this.time);\r\n  }\r\n}\r\n\r\nexport type TickHandler = (tickNumber: number) => void;","'use strict';\n\nvar domain;\n\n// This constructor is used to store event handlers. Instantiating this is\n// faster than explicitly calling `Object.create(null)` to get a \"clean\" empty\n// object (tested with v8 v4.9).\nfunction EventHandlers() {}\nEventHandlers.prototype = Object.create(null);\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nexport default EventEmitter;\nexport {EventEmitter};\n\n// nodejs oddity\n// require('events') === require('events').EventEmitter\nEventEmitter.EventEmitter = EventEmitter\n\nEventEmitter.usingDomains = false;\n\nEventEmitter.prototype.domain = undefined;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\nEventEmitter.init = function() {\n  this.domain = null;\n  if (EventEmitter.usingDomains) {\n    // if there is an active domain, then attach to it.\n    if (domain.active && !(this instanceof domain.Domain)) {\n      this.domain = domain.active;\n    }\n  }\n\n  if (!this._events || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = new EventHandlers();\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events, domain;\n  var needDomainExit = false;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  domain = this.domain;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    er = arguments[1];\n    if (domain) {\n      if (!er)\n        er = new Error('Uncaught, unspecified \"error\" event');\n      er.domainEmitter = this;\n      er.domain = domain;\n      er.domainThrown = false;\n      domain.emit('error', er);\n    } else if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n    // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n    // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  if (needDomainExit)\n    domain.exit();\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = new EventHandlers();\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] :\n                                          [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n                            existing.length + ' ' + type + ' listeners added. ' +\n                            'Use emitter.setMaxListeners() to increase limit');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        emitWarning(w);\n      }\n    }\n  }\n\n  return target;\n}\nfunction emitWarning(e) {\n  typeof console.warn === 'function' ? console.warn(e) : console.log(e);\n}\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction _onceWrap(target, type, listener) {\n  var fired = false;\n  function g() {\n    target.removeListener(type, g);\n    if (!fired) {\n      fired = true;\n      listener.apply(target, arguments);\n    }\n  }\n  g.listener = listener;\n  return g;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || (list.listener && list.listener === listener)) {\n        if (--this._eventsCount === 0)\n          this._events = new EventHandlers();\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length; i-- > 0;) {\n          if (list[i] === listener ||\n              (list[i].listener && list[i].listener === listener)) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (list.length === 1) {\n          list[0] = undefined;\n          if (--this._eventsCount === 0) {\n            this._events = new EventHandlers();\n            return this;\n          } else {\n            delete events[type];\n          }\n        } else {\n          spliceOne(list, position);\n        }\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = new EventHandlers();\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = new EventHandlers();\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        for (var i = 0, key; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = new EventHandlers();\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        do {\n          this.removeListener(type, listeners[listeners.length - 1]);\n        } while (listeners[0]);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  var evlistener;\n  var ret;\n  var events = this._events;\n\n  if (!events)\n    ret = [];\n  else {\n    evlistener = events[type];\n    if (!evlistener)\n      ret = [];\n    else if (typeof evlistener === 'function')\n      ret = [evlistener.listener || evlistener];\n    else\n      ret = unwrapListeners(evlistener);\n  }\n\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, i) {\n  var copy = new Array(i);\n  while (i--)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","/*tslint:disable */\nimport StrictEventEmitter from \"strict-event-emitter-types\";\nimport { Timer } from './timer';\nimport { InputMessage, Timestamp, ServerConnection, ClientConnection } from './network';\nimport { EventEmitter } from 'events';\n\ntype EntityId = string;\n\n/**\n * Represents any object in the game, physical or abstract. All objects together\n * encode the game state.\n */\nexport abstract class GameEntity<Input, State> {\n\n  public state: State;\n\n  public readonly id: EntityId;\n\n  constructor(id: EntityId, initialState: State) {\n    this.id = id;\n    this.state = initialState;\n  }\n\n  public abstract validateInput(currentState: State, input: Input): boolean;\n  public abstract calcNextStateFromInput(currentState: State, input: Input): State;\n  public abstract interpolate(state1: State, state2: State, timeRatio: number): State;\n}\n\ninterface GameEngineEvents {\n  preStep: void;\n  postStep: void;\n}\n\n/**\n * Contains all state and game logic for a game.\n */\nexport abstract class GameEngine {\n  /** These compose the state of the game. */\n  private entities: Map<EntityId, GameEntity<any, any>> = new Map();\n  private stepTimer: Timer = new Timer(this._step.bind(this));\n  private stepRateHz: number;\n  private eventEmitter: StrictEventEmitter<EventEmitter, GameEngineEvents> = new EventEmitter();\n\n  /**\n   * Listen for a game event.\n   */\n  public readonly on = this.eventEmitter.on;\n\n  /**\n   * Starts the game.\n   * @param stepRateHz How often the game should advance its state.\n   */\n  public start(stepRateHz: number) {\n    this.on('postStep', () => console.log('i am post stepping'));\n    this.stepRateHz = stepRateHz;\n    this.stepTimer.start(stepRateHz);\n  }\n\n  /**\n   * Game state stops advancing. State is unaffected.\n   */\n  public stop(): void {\n    this.stepTimer.stop();\n  }\n\n  public isRunning = () => this.stepTimer.isRunning();\n\n  public addObject(object: GameEntity<any, any>) {\n    this.entities.set(object.id, object);\n  }\n\n  public getEntityById(id: EntityId): GameEntity<any, any> | undefined {\n    return this.entities.get(id);\n  }\n\n  public getEntities(): Array<GameEntity<any, any>> {\n    return Array.from(this.entities.values());\n  }\n\n  /**\n   * Advances game state.\n   */\n   private _step(): void {\n     this.eventEmitter.emit('preStep');\n     this.step(this.stepRateHz);\n     this.eventEmitter.emit('postStep');\n   }\n\n   protected abstract step(stepRateHz: number): void;\n}\n\nexport interface EntityFactory {\n  fromStateMessage(entityId: string, state: any): GameEntity<any, any>;\n}\n\nexport interface InputForEntity {\n  /**\n   * The entity should react to the input.\n   */\n  entityId: EntityId;\n  input: Object;\n}\n/**\n * Collects inputs for a game step.\n */\nexport interface InputCollector {\n  /**\n   * @returns A collection of inputs paired with the entities they are meant\n   * to be applied against.\n   */\n  getInputs(): InputForEntity[];\n}\n\n/**\n * Collects user inputs.\n * Translates inputs into intents specific to objects.\n * Sends intents to GameEngine on pre-tick, which will be applied on tick.\n */\nexport class ClientGame<Game extends GameEngine>  {\n  /** Contains game state and can accept inputs. */\n  private engine: Game;\n  /** Provides state messages. */\n  private server: ServerConnection;\n  /** Constructs representations of new entities given a state object. */\n  private entityFactory: EntityFactory;\n  private serverUpdateRateInHz: number;\n  /** Collects user inputs. */\n  private inputCollector: InputCollector;\n  \n  private inputSequenceNumber = 0;\n  /**\n   * Inputs with sequence numbers later than that of the last server message received.\n   */\n  private pendingInputs = new Array<InputMessage>();\n  private playerEntityIds: EntityId[] = [];\n\n  private entityStateBuffers = new Map<EntityId, {timestamp: Timestamp, state: Object}[]>();\n\n  constructor(engine: Game, server: ServerConnection, entityFactory: EntityFactory, \n    serverUpdateRateInHz: number, inputCollector: InputCollector) { \n      \n      this.engine = engine;\n      this.server = server;\n      this.entityFactory = entityFactory;\n      this.serverUpdateRateInHz = serverUpdateRateInHz;\n      this.inputCollector = inputCollector;\n\n      engine.on('preStep', this.update);\n  }\n\n  public startGame(updateRateHz: number) {\n    this.engine.start(updateRateHz);\n  }\n\n  public stopGame() {\n    this.engine.stop();\n  }\n\n  public isConnected(): boolean {\n    return this.playerEntityIds.length > 0;\n  }\n\n  public hasControllableEntities(): boolean {\n    return this.playerEntityIds.length > 0;\n  }\n\n  public update() {\n    this.processServerMessages();\n\n    if (!this.isConnected()) return;\n\n    this.processInputs();\n\n    this.interpolateEntities();\n  }\n\n  /**\n   * Process all new messages sent by the server.\n   * Add new entities, update our player-controlled entities to have the state sent by the server, then reapply\n   * pending inputs that have yet to be acknowledged by the server.\n   * \n   */\n  private processServerMessages() {\n    const isFirstTimeSeeingEntity = (entityId: string) => (this.engine.getEntities().some((ge) => ge.id === entityId));\n\n    while(this.server.hasNext()) {\n      const stateMessage = this.server.receive();\n\n      if (isFirstTimeSeeingEntity(stateMessage.entityId)) {\n        const entity = this.entityFactory.fromStateMessage(stateMessage.entityId, stateMessage);\n        this.engine.addObject(entity);\n        this.entityStateBuffers.set(stateMessage.entityId, new Array());\n      }\n\n      if (this.playerEntityIds.includes(stateMessage.entityId)) { \n        // Perform server reconciliation. When the client receives an update about its entities\n        // from the server, apply them, and then reapply all local pending inputs (have timestamps\n        // later than the timestamp sent by the server).\n        const inputsNotProcessedByServer = this.pendingInputs.filter((input: InputMessage) => {\n          return input.inputSequenceNumber > stateMessage.lastProcessedInputSequenceNumber;\n        });\n\n        inputsNotProcessedByServer.forEach((inputMessage: InputMessage) => {\n          const entity = this.engine.getEntityById(inputMessage.entityId);\n          if (entity == null) throw Error(\"Did not find entity corresponding to a pending input.\");\n\n          entity.state = entity.calcNextStateFromInput(entity.state, inputMessage.input);\n        });\n      } else { \n        const timestamp = new Date().getTime();\n        const stateBuffer = this.entityStateBuffers.get(stateMessage.entityId);\n        if (stateBuffer == null) throw Error(`Did not find state buffer for entity with id ${stateMessage.entityId}.`)\n        stateBuffer.push({timestamp, state: stateMessage.state});\n      }\n    }\n  }\n\n  /**\n   * Collects inputs from player (or AI), stamps them with a timestamp and sequence number,\n   * sends them to the server, and applies them locally.\n   */\n  private processInputs(): void {\n    const now = +new Date();\n    const inputs = this.inputCollector.getInputs();\n\n    inputs.forEach(input => {\n      const inputMessage = {\n        entityId: input.entityId,\n        timestamp: now,\n        inputSequenceNumber: this.inputSequenceNumber,\n        input: input.input\n      };\n\n      this.server.send(inputMessage);\n\n      const playerEntity = this.engine.getEntityById(input.entityId);\n\n      if (playerEntity == null) throw Error(`Received input for unknown entity ${input.entityId}.`);\n\n      playerEntity.calcNextStateFromInput(playerEntity.state, input.input); // Client-side prediction.\n\n      this.pendingInputs.push(inputMessage); // Save for later reconciliation.\n    });\n\n\n    this.inputSequenceNumber = this.inputSequenceNumber + 1;\n  }\n\n  private interpolateEntities(): void {\n    const now = +new Date();\n    const renderTimestamp = now - (1000.0 / this.serverUpdateRateInHz);\n\n    this.engine.getEntities().forEach((entity: GameEntity<any, any>) => {\n      if (this.playerEntityIds.includes(entity.id)) return;\n\n      // Find the two authoritative positions surrounding the timestamp.\n      const buffer = this.entityStateBuffers.get(entity.id);\n      if (buffer == undefined) throw Error(`Could not find state buffer for entity ${entity.id}.`)\n\n      // Drop older positions.\n      while (buffer.length >= 2 && buffer[1].timestamp <= renderTimestamp) {\n        buffer.shift();\n      }\n\n      // Get the \"average\" (whatever the entity's interpolation scheme decides) of the two states in which\n      // the current timestamp falls in-between.\n      if (buffer.length >= 2 && buffer[0].timestamp <= renderTimestamp && renderTimestamp <= buffer[1].timestamp) {\n        const timeRatio = (renderTimestamp - buffer[0].timestamp) / (buffer[1].timestamp - buffer[0].timestamp);\n        entity.state = entity.interpolate(buffer[0], buffer[1], timeRatio);\n      }\n    });\n  }\n}\n\nexport abstract class ServerGame<Game extends GameEngine> {\n\n  public updateRateHz: number;\n\n  public game: Game;\n\n  private clients: ClientInfo[];\n\n  private updateInterval: NodeJS.Timeout;\n\n  constructor(game: Game) {\n    this.clients = [];\n    this.game = game;\n    this.updateRateHz = 10;\n  }\n\n  public connect(connection: ClientConnection): string {\n\n    // Create some sort of entity for the client to control.\n    // Initialize the state of the entity (e.g. spawn).\n    // Add to the server representation of the game, this.game.\n\n    const newClientId = String(this.clients.length);\n    const client: ClientInfo = {\n      clientId: newClientId,\n      connection,\n      lastProcessedInput: 0\n    };\n\n    this.handlePlayerConnection(newClientId);\n    \n    this.clients.push(client);\n\n    return newClientId;\n  }\n  \n  protected abstract handlePlayerConnection(newClientId: string): void;\n\n  public startServer(hz: number) {\n    this.updateRateHz = hz;\n\n    clearInterval(this.updateInterval);\n\n    this.updateInterval = setInterval(() => this.update(), 1000 / this.updateRateHz);\n  }\n  \n  private update() {\n    this.processInputs();\n    this.sendWorldState();\n    \n    // Fire update event, can be used for rendering/logging and such.\n  }\n\n  /**\n   * Processes all available inputs.\n   */\n  private processInputs() {\n    const getClientWithReadyInput = (): ClientInfo | undefined => {\n      for (const client of this.clients) {\n        if (client.connection.hasNext()) {\n          return client;\n        }\n      }\n      return undefined;\n    }\n\n    while (true) {\n      const client = getClientWithReadyInput();\n      if (client == null) {\n        break;\n      }\n\n      const input = client.connection.receive();\n      const entity = this.game.getEntityById(input.entityId);\n\n      if (entity != null && entity.validateInput(entity.state, input.input)) {\n\n        entity.calcNextStateFromInput(entity.state, input.input);\n\n        client.lastProcessedInput = input.inputSequenceNumber;\n      }\n    }\n  }\n\n  private sendWorldState() {\n    const worldState = this.getStatesToBroadcastToClients();\n\n    for (const client of this.clients) {\n      for (const state of worldState) {\n        client.connection.send({\n          entityId: state.entityId,\n          state,\n          lastProcessedInputSequenceNumber: client.lastProcessedInput\n        });\n      }\n    }\n  }\n \n  protected abstract getStatesToBroadcastToClients(): {entityId: string, state: any}[];\n}\n\nexport interface ClientInfo {\n  clientId: string;\n  connection: ClientConnection;\n  lastProcessedInput: number;\n}","/*tslint:disable */\n\nexport type Timestamp = number;\n\nexport interface InputMessage {\n  entityId: string;\n  input: any;\n  inputSequenceNumber: number;\n}\n\nexport interface StateMessage {\n  entityId: string;\n  state: any;\n  lastProcessedInputSequenceNumber: number;\n}\n\n/**\n * A network that can be used by a client to communicate to a server or vis-a-versa.\n */\nexport interface Connection<SendType,ReceiveType> {\n  send(message: SendType): void;\n  \n  receive(): ReceiveType;\n\n  hasNext(): boolean;\n}\n\nexport interface ServerConnection extends Connection<InputMessage, StateMessage> {}\nexport interface ClientConnection extends Connection<StateMessage, InputMessage> {}\n\nexport class InMemoryClientServerNetwork {\n\n  private inputMessageQueue = new Array<InputMessage>();\n  private stateMessageQueue = new Array<StateMessage>();\n  \n  public getServerConnection(): ServerConnection {\n    return {\n      send: (message: InputMessage) => {\n        this.inputMessageQueue.push(message);\n      },\n      receive: () => {\n        return unsafePop(this.stateMessageQueue);\n      },\n      hasNext: () => {\n        return this.stateMessageQueue.length > 0;\n      }\n    }\n  }\n\n  public getClientConnection(): ClientConnection {\n    return {\n      send: (message: StateMessage) => {\n        this.stateMessageQueue.push(message);\n      },\n      receive: () => {\n        return unsafePop(this.inputMessageQueue);\n      },\n      hasNext: () => {\n        return this.inputMessageQueue.length > 0;\n      }\n    }\n  }\n}\n\nfunction unsafePop<T>(array: Array<T>): T {\n  const val = array.pop();\n  if (val == null) throw Error('Cannot pop element from empty array.');\n  return val;\n}","// tslint:disable\n\nimport { GameEngine, GameEntity, InputCollector, InputForEntity, ServerGame, EntityFactory, ClientGame } from '../../src/main';\nimport { InMemoryClientServerNetwork } from '../../src/network';\n\ninterface MoveInput extends InputForEntity {\n  inputType: DemoInputType.Move,\n  input: {\n    direction: MoveInputDirection;\n  }\n}\n\nexport const enum DemoInputType {\n  Move = 'move'\n}\n\nexport const enum MoveInputDirection {\n  Forward = 'right',\n  Backward = 'left'\n}\n\ntype DemoInput = MoveInput; // Union with new Input types added in the future.\n\nclass KeyboardDemoInputCollector implements InputCollector {\n\n  private playerEntityId: string;\n\n  private leftKeyIsDown: boolean = false;\n  private rightKeyIsDown: boolean = false;\n\n  constructor(playerEntityId: string, moveLeftKeyCode: number, moveRightKeyCode: number) {\n\n    this.playerEntityId = playerEntityId;\n\n    window.onkeydown = (e: KeyboardEvent) => {\n      if (e.keyCode === moveLeftKeyCode) {\n        this.leftKeyIsDown = true;\n      }\n      if (e.keyCode === moveRightKeyCode) {\n        this.rightKeyIsDown = true;\n      }\n    }\n\n    window.onkeyup = (e: KeyboardEvent) => {\n      if (e.keyCode === moveLeftKeyCode) {\n        this.leftKeyIsDown = false;\n      }\n      if (e.keyCode === moveRightKeyCode) {\n        this.rightKeyIsDown = false;\n      }\n    }\n  }\n\n  public getInputs(): DemoInput[] {\n\n    const xor = (x: boolean, y: boolean) => (x && !y) || (!x && y);\n\n    const inputs: DemoInput[] = [];\n\n    if (xor(this.leftKeyIsDown, this.rightKeyIsDown)) {\n\n      const direction = this.leftKeyIsDown ? MoveInputDirection.Backward : MoveInputDirection.Forward;\n\n      const input: MoveInput = {\n        inputType: DemoInputType.Move,\n        entityId: this.playerEntityId,\n        input: {\n          direction\n        }\n      }\n\n      inputs.push(input);\n    }\n\n    return inputs;\n  }\n}\n\ninterface DemoPlayerState {\n  position: number;\n}\n\ninterface DemoPlayerInput {\n  direction?: MoveInputDirection;\n}\n\nexport class DemoPlayer extends GameEntity<DemoPlayerInput, DemoPlayerState> {\n\n  constructor(id: string, initialState: DemoPlayerState) {\n    super(id, initialState);\n  }\n\n  public validateInput(_currentState: DemoPlayerState, _input: DemoPlayerInput): boolean {\n    // No vulnerabilities here, since any input is valid.\n    return true;\n  }\n\n  public calcNextStateFromInput(currentState: DemoPlayerState, input: DemoPlayerInput): DemoPlayerState {\n\n    const currentPosition = currentState.position;\n    let nextPosition;\n\n    switch (input.direction) {\n      case MoveInputDirection.Forward:\n        nextPosition = currentPosition + 1;\n        break;\n      case MoveInputDirection.Backward:\n        nextPosition = currentPosition - 1;\n        break;\n      default:\n        nextPosition = currentPosition;\n    }\n\n    return {\n      position: nextPosition\n    };\n  }\n\n  public interpolate(state1: DemoPlayerState, state2: DemoPlayerState, timeRatio: number): DemoPlayerState {\n    return {\n      position: (state1.position * (1.0 - timeRatio)) + (state2.position * timeRatio)\n    };\n  }\n}\n\nexport class DemoGameEngine extends GameEngine {\n\n  private tickCounter: number = 0;\n\n  protected step(): void {\n\n    this.tickCounter += 1;\n\n    if (this.tickCounter % 100 === 0) {\n      // tslint:disable-next-line:no-console\n      console.log('tick', this.tickCounter);\n    }\n\n    return;\n  }\n}\n\nexport class DemoServer extends ServerGame<DemoGameEngine> {\n\n  private players: DemoPlayer[] = [];\n\n  protected handlePlayerConnection(clientId: string): void {\n    const newPlayer = new DemoPlayer(clientId, { position: 0 });\n    this.players.push(newPlayer);\n    this.game.addObject(newPlayer);\n\n    this.startServer(90);\n  }\n\n  // Message should be a mapped thingy with all available state types.\n  // tslint:disable-next-line:no-any\n  protected getStatesToBroadcastToClients(): { entityId: string; state: any }[] {\n    const messages = [];\n\n    for (const p of this.players) {\n      messages.push({\n        entityId: p.id,\n        state: p.state\n      })\n    }\n\n    return messages;\n  }\n}\n\nexport class DemoEntityFactory implements EntityFactory {\n\n  fromStateMessage(entityId: string, state: any): DemoPlayer {\n    if (state != null && state.position != null) {\n      return new DemoPlayer(entityId, {\n        position: state.position\n      });\n    }\n\n    throw Error('Unable to convert state message into a game entity.');\n  }\n\n}\n\n\nconst serverUpdateRate = 60;\nconst clientUpdateRate = 120;\n\nconst serverGame = new DemoGameEngine();\nconst server = new DemoServer(serverGame);\nserver.startServer(serverUpdateRate);\nconst network = new InMemoryClientServerNetwork();\n\nconst clientConnection = network.getClientConnection();\nconst client1Id = server.connect(clientConnection);\nconst client2Id = server.connect(clientConnection);\n\nconst createClient = (gameEngine: DemoGameEngine, playerEntityId: string, moveLeftKeycode: number, moveRightKeyCode: number) => {\n\n  const serverConnection = network.getServerConnection();\n  const entityFactory = new DemoEntityFactory();\n  const InputCollector = new KeyboardDemoInputCollector(playerEntityId, moveLeftKeycode, moveRightKeyCode);\n\n  const client = new ClientGame(gameEngine, serverConnection,\n    entityFactory, serverUpdateRate, InputCollector);\n\n  return client;\n}\n\nconst client1Game = new DemoGameEngine();\nconst client2Game = new DemoGameEngine();\nconst client1 = createClient(client1Game, client1Id, 65, 68);\nconst client2 = createClient(client2Game, client2Id, 37, 39);\n\nclient1.startGame(clientUpdateRate);\nclient2.startGame(clientUpdateRate);\n\nconst serverCanvas = document.getElementById('server_canvas') as HTMLCanvasElement;\nconst client1Canvas = document.getElementById('player1_canvas') as HTMLCanvasElement;\nconst client2Canvas = document.getElementById('player2_canvas') as HTMLCanvasElement;\n\n\nserverGame.on('postStep', () => {\n  renderWorldOntoCanvas(serverCanvas, serverGame.getEntities());\n});\n\nclient1Game.on('postStep', () => {\n  renderWorldOntoCanvas(client1Canvas, client1Game.getEntities());\n});\n\nclient2Game.on('postStep', () => {\n  renderWorldOntoCanvas(client2Canvas, client2Game.getEntities());\n});\n\nconst renderWorldOntoCanvas = (canvas: HTMLCanvasElement, entities: GameEntity<any, any>[]) => {\n  canvas.width = canvas.width; // Clears the canvas.\n\n  const colors = ['blue', 'red'];\n\n  entities.forEach((entity: GameEntity<any,any>) => {\n    if (!(entity instanceof DemoPlayer)) return;\n\n    const entityRadius = canvas.height*0.9/2;\n    const entityPosition = entity.state.position;\n    const entityIndex = Number(entity.id);\n\n    const ctx = canvas.getContext('2d');\n\n    if (ctx == null) throw Error('Canvas context is undefined');\n\n    ctx.beginPath();\n    ctx.arc(entityPosition, canvas.height / 2, entityRadius, 0, 2 * Math.PI, false);\n    ctx.fillStyle = colors[entityIndex];\n    ctx.fill();\n    ctx.lineWidth = 5;\n    ctx.strokeStyle = 'dark' + colors[entityIndex];\n    ctx.stroke();\n  });\n}\n\nconsole.log('hi');"],"names":["DemoInputType","MoveInputDirection"],"mappings":"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"}